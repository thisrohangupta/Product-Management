pipeline:
  name: K8s Helm CD Pipeline
  identifier: K8s_Helm_CD_Pipeline
  projectIdentifier: Rohan
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Redis
        identifier: Redis
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: redis
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      type: DockerRegistry
                      spec:
                        tag: <+input>
          environment:
            environmentRef: staging
            deployToAll: false
            infrastructureDefinitions:
              - identifier: productstaging
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
              - step:
                  type: K8sDelete
                  name: clean up demo
                  identifier: clean_up_demo
                  spec:
                    deleteResources:
                      type: ReleaseName
                      spec:
                        deleteNamespace: false
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: dev
        identifier: dev
        template:
          templateRef: Rolling_Deployment_Dev
          versionLabel: 0.0.1
          templateInputs:
            type: Deployment
            spec:
              service:
                serviceRef: nginx
    - stage:
        name: SAM Deploy
        identifier: SAM_Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: CustomDeployment
          customDeploymentRef:
            templateRef: AWS_SAM
            versionLabel: 0.0.1
          execution:
            steps:
              - step:
                  name: Fetch Instances
                  identifier: fetchInstances
                  type: FetchInstanceScript
                  timeout: 10m
                  spec: {}
              - step:
                  name: Deploy SAM
                  identifier: Deploy_SAM
                  template:
                    templateRef: Deploy_SAM
                    versionLabel: 0.0.1
            rollbackSteps: []
          service:
            serviceRef: SAM_Function
          environment:
            environmentRef: L3
            deployToAll: false
            infrastructureDefinitions:
              - identifier: Deployment_Template
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: releaseName
      type: String
      description: ""
      value: <+input>
  allowStageExecutions: true
